angular.module("angular-grid-directive",[]),angular.module("angular-grid-directive").filter("range",function(){return function(t,e){return e=+e,t.slice(e)}}),angular.module("angular-grid-directive").filter("startFrom",function(){return function(t,e){return e=+e,t.slice(e)}}),angular.module("angular-grid-directive").filter("range",function(){return function(t,e){e=parseInt(e);for(var a=0;a<e;a++)t.push(a);return t}}),angular.module("angular-grid-directive").directive("angularGridDirective",["$timeout",function(t){return{restrict:"A",scope:{gridTemplateUrl:"=",gridTitleData:"=",gridBodyData:"=",gridPageSize:"=",gridVisiblePagesCount:"=",gridSortEnabled:"=",gridSearchEnabled:"=",gridPagingEnabled:"=",gridColKeys:"="},controller:"gridController",template:'<!-- Search + table --><div class="panel panel-default">\t<div class="panel-heading">\t\t<input data-ng-show="gridSearchEnabled" placeholder="Search.." type="text" data-ng-model="searchWord" placeholder="" style="width:100%;"/>\t</div>\t<table class="table">\t\t<thead>\t\t\t<tr>\t\t\t\t<th data-ng-repeat="item in colTitles" data-ng-class="item.key">\t\t\t\t\t<div data-ng-class="{ \'sorted-header\' : item.sortable, \'sort-desc\': orderByFiledName == \'-\' + item.key, \'sort-asc\': orderByFiledName == \'+\' + item.key }">\t\t\t\t\t\t<a href="#" data-ng-click="item.sortable && changeOrderOfFiled(item.key)">{{item.title}}</a>\t\t\t\t\t</div>\t\t\t\t</th>\t\t\t</tr>\t\t</thead>\t\t<tbody>\t\t\t<tr data-ng-repeat="item in data | filter:searchWord | orderBy:orderByFiledName | startFrom:currentPage*pageSize | limitTo:pageSize">\t\t\t\t<td data-ng-repeat="colItem in colTitles" data-custom-table-cell-render-directive="{{colItem.key}}" data-row-data="item">{{item[colItem.key]}}</td>\t\t\t</tr>\t\t</tbody>\t</table></div><!-- Paging --><div data-ng-show="gridPagingEnabled==true" style="direction: ltr;">\t<ul class="pagination">\t\t<li class="">\t\t\t<a href="" data-ng-click="firstPage()" title="First"><<</a>\t\t</li>\t\t<li class="">\t\t\t<a href="" data-ng-click="prevPage()" title="Previous"><</a>\t\t</li>\t\t<li class="{{n == currentPage ? \'active\': \'\'}}" data-ng-if="totalDisplayedPages > 0" data-ng-repeat="n in [] | range:numberOfPages() | startFrom:getPageTostartFrom() | limitTo:totalDisplayedPages">\t\t\t<a href="#" data-ng-click="goToPage(n)">{{n+1}}</a>\t\t</li>\t\t<li class="{{n == currentPage ? \'active\': \'\'}}" data-ng-if="totalDisplayedPages == 0" data-ng-repeat="n in [] | range:numberOfPages()">\t\t\t<a href="#" data-ng-click="goToPage(n)">{{n+1}}</a>\t\t</li>\t\t<li class="" >\t\t\t<a href="" data-ng-click="nextPage()" title="Next">></a>\t\t</li>\t\t<li class="" >\t\t\t<a href="" data-ng-click="lastPage()" title="Last">>></a>\t\t</li>\t</ul></div>'}}]),angular.module("angular-grid-directive").controller("gridController",["$scope",function(t){return t.gridBodyData?t.gridTitleData?(t.gridPageSize?t.pageSize=t.gridPageSize:t.pageSize=t.gridBodyData.length,1!=t.gridSortEnabled&&0!=t.gridSortEnabled?void console.warn("hrlGridDirective - grid-sort-enabled attribute must be true || false"):1!=t.gridSearchEnabled&&0!=t.gridSearchEnabled?void console.warn("hrlGridDirective - grid-search-enabled attribute must be true || false"):(t.totalDisplayedPages=0,isNaN(t.gridVisiblePagesCount)||(t.totalDisplayedPages=t.gridVisiblePagesCount),t.currentPage=0,t.colTitles=t.gridTitleData,t.data=t.gridBodyData,t.numberOfPages=function(){return Math.ceil(t.data.length/t.pageSize)},t.goToPage=function(e){t.currentPage!=e&&(t.currentPage=e,t.$root.$broadcast("gridControllerPageChange",t.currentPage))},t.firstPage=function(){0!=t.currentPage&&(t.$root.$broadcast("gridControllerPageChange",t.currentPage),t.currentPage=0)},t.prevPage=function(){t.currentPage>0&&(t.currentPage--,t.$root.$broadcast("gridControllerPageChange",t.currentPage))},t.nextPage=function(){t.currentPage+1<t.numberOfPages()&&(t.currentPage++,t.$root.$broadcast("gridControllerPageChange",t.currentPage))},t.lastPage=function(){t.currentPage=t.numberOfPages()-1,t.$root.$broadcast("gridControllerPageChange",t.currentPage)},t.getPageTostartFrom=function(){if(0==t.totalDisplayedPages||t.numberOfPages()<=t.totalDisplayedPages)return 0;var e=t.numberOfPages(),a=t.currentPage-parseInt(t.totalDisplayedPages/2);return a<=0?0:e-a<t.totalDisplayedPages?e-t.totalDisplayedPages:a},t.changeOrderOfFiled=function(e){t.orderByFiledName=="+"+e?t.orderByFiledName="-"+e:t.orderByFiledName=="-"+e?t.orderByFiledName="+"+e:t.orderByFiledName="+"+e,t.$root.$broadcast("gridControllerFieldOrderChange",t.orderByFiledName)},void t.$root.$on("resetGridSystem",function(){t.currentPage=0,t.orderByFiledName="",t.$root.$broadcast("gridControllerPageChange",t.currentPage)}))):void console.warn("hrlGridDirective - no grid-title-data attribute was provider"):void console.warn("hrlGridDirective - no grid-body-data attribute was provider")}]);
//# sourceMappingURL=angular-grid-directive.min.js.map
